/*  인스턴스멤버와 static멤버
 * 1)인스턴스 멤버
 * - 클래스에서 선언되는 필드(변수와 상수) 및 메서드
 * -생성은 클래스 객체가 생성될 때
 * -사용자가 초기화 명령을 수행시키지 않아도 자동 초기화
 * -this, super : 참조형 변수 제공
 * - this : 자신의 클래스의 주소 저장
 *     . 인스턴스 변수와 메소드 내부에서 선언된 지역변수가
 *       같은 단어로 구성되었을 때 메소드 내부에서 인스턴스 변수를 지칭 할 때 사용
 *   2)정적멤버
 *  - static 키워드를 사용
 *  - 생성시점이 해당 클래스가 메모리에 loading 될 때 생성 ( 초기화도 한번만 수행됨)
 *  - JVM 메모리 중 메소드 영역에 저장됨
 *    정적 메소드 내에서 참조하는 변수나 메소드는 반드시 정적이어야 함
 *  - 정적 메소드에서 this 변수는 사용할 수 없음
 *  - 정적 메소드를 호출할 경우 해당 클래스이름으로도 호출 가능
 *  - 공용으로 사용하는 공용변수나 메소드에 사용
 *  
 *  3)final 필드
 *   - 변수, 메소드, 클래스에 사용
 *   - 변수에 사용되어 상수화
 *   - 메소드에 사용되면 overriding이 제한됨
 *   - 클래스에 사용되면 하위클래스 생성이 불가( 종단 클래스)
 *   - 인스턴스 변수에 사용되면 해당 클래스는 재생성이 불가능
 */


package chapter06;

public class Intance01 {

	public static void main(String[] args) {
//		Car02 c1 = new Car02();
//		Car02 c2 = new Car02 ("KIA",250,"red");
		
		final Company cp1=new Company();
		cp1.setName("(주)다팔아");
		System.out.println("회사명 : "+cp1.getName());
		
		//cp1 =new Company();  =>final 때문에 에러~ 같은 클래스 객체의 재생성 불가능

	}

}

