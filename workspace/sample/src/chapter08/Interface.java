
package chapter08;

public class Interface {
	/*
	 * [1] 인터페이스란? - 동일한 목적 하에 동일한 기능을 수행하게끔 강제하는 것이 인터페이스의 역할이자 개념 - 자바의 다형성을 극대화하여
	 * 개발코드 수정을 줄이고 프로그램 유지보수성을 높이기 위한 도구
	 * 
	 * [2] 인터페이스 문법과 다형성 이해 - 인터페이스는 interface 키워드를 통해 선언할 수 있으며 implements 키워드를 통해
	 * 일반 클래스에서 인터페이스를 구현할 수 있다. - JAVA8 이전까지는 상수, 추상메소드만 선언이 가능(강제성이 강함을 의미) -
	 * JAVA8부터 디폴트메소드, 정적메소드가 추가(구현 강제성 안에 유연함을 제공)
	 * 
	 * [3] 사용형식 public interface 인터페이스명 { //상수 - 인터페이스에서 설정된 값을 변경하지 말고 제공해주는 값만
	 * 참조(절대적) 타입 상수명 = 값;
	 * 
	 * //추상 메소드 - 제공된 가이드인 추상메소드를 오버라이팅해서 재구현해라. (강제적) 타입 메소드명(매개변수, ... );
	 * 
	 * //디폴트 메소드 - 인터페이스에서 기본적으로 제공해주지만, 오버라이딩하여 사용. (선택적) default 타입 메소드명(매개변수, …
	 * ){ //구현부 }
	 * 
	 * //정적 메소드 - 인터페이스에서 제공해주는 것으로 무조건 사용 (절대적) static 타입 메소드명(매개변수) { //구현부 } }
	 */
}
